#import helper functions
import math

#define option parameters
S0 = 113.05
K = 115
T = .38
r = 0.0025
sigma = .2339
M = 50
dt = T/M
I = 250000

#perform monte carlo 
S = np.zeros((M + 1, I))
S[0] = S0
for t in range(1, M+1):
    z = np.random.standard_normal(I)
    S[t] = S[t-1] * np.exp((r- 0.5 * sigma **2) * dt + sigma * math.sqrt(dt) * z)

C0 = math.exp(-r * T) * np.sum(np.maximum(S[-1] - K, 0)) / I

#plot path of potential index(stock) levels
import matplotlib.pyplot as plt
plt.plot(S[:, :10])
plt.grid(True)
plt.xlabel('time step')
plt.ylabel('index level')

#generate a historgram of potential prices
plt.hist(S[-1], bins = 50)
plt.grid(True)
plt.xlabel('index level')
plt.ylabel('frequency')

#generate graph of potential profitability
plt.hist(np.maximum(S[-1] - K, 0), bins = 50)
plt.grid(True)
plt.xlabel('option inner value')
plt.ylabel('frequency')
plt.ylim(0, 50000)
