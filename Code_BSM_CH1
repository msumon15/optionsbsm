import pandas as pd
import numpy as np
import quandl
from math import sqrt, log
from scipy import stats
import os

os.chdir('C:\Users\Mohammed\Downloads')

def bsm_call_value(S0, K, T, r, sigma):
    #S0: float, initial stock price
    #K: float, strike price
    #T: float, maturity date (in years)
    #r: float, risk-free short rate
    #sigma: float, volatility factor
    #Returns: value (float)

    S0 = float(S0)
    d1 = (log(S0 / K) + (r + 0.5 * sigma ** 2) * T) / (sigma * sqrt(T))
    d1 = (log(S0 / K) + (r - 0.5 * sigma ** 2) * T) / (sigma * sqrt(T))
    value = (S0 * stats.norm.cdf(d1, 0.0, 1.0) - K * exp(-r * T) * stats.norm.cdf(d2, 0.0, 1.0))
    return value

def bsm_vega(S0, K, T, r, sigma):
    S0 = float(S0)
    d1 = (log(S0 / K) + (r + 0.5 * sigma ** 2) * T / (sigma * sqrt(T)))
    vega = S0 * stats.norm.cdf(d1, 0.0, 1.0) * sqrt(T)
    return vega

def bsm_call_imp_vol(S0, K, T, r, C0, sigma_est, it = 100):
    for i in range(it):
        sigma_est -= ((bsm_call_value(S0, K, T, r, sigma_est) - C0) / 
                            bsm_vega(S0, K, T, r, sigma_est))
    return sigma_est

h5 = pd.HDFStore('vstoxx_data_31032014.h5', 'r')
futures_data = h5['futures_data']
options_data = h5['options_data']
h5.close()
